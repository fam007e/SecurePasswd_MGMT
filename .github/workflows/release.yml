name: Release SecurePasswd_MGMT

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: debian-package
            package_glob: "*.deb"
            cpack_generator: "DEB"
          - os: windows-latest
            artifact_name: windows-installer
            package_glob: "*.exe"
            cpack_generator: "NSIS"
          - os: macos-latest
            artifact_name: macos-dmg
            package_glob: "*.dmg"
            cpack_generator: "DragNDrop"

    steps:
      - uses: actions/checkout@v3
      
      - name: Get the version
        id: get_version
        run: echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

      - name: Create source tarball
        if: runner.os == 'Linux'
        run: tar -czvf securepasswd_mgmt-${{ steps.get_version.outputs.version }}.tar.gz --exclude=".git" .

      - name: Upload source tarball
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: source-tarball
          path: securepasswd_mgmt-${{ steps.get_version.outputs.version }}.tar.gz

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libsodium-dev libargon2-dev libsqlcipher-dev libcsv-dev qt6-base-dev libssl-dev libcurl4-openssl-dev

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install libsodium argon2 curl openssl --triplet x64-windows
        shell: pwsh

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install qt@6
          brew install create-dmg
          brew install libsodium argon2 sqlcipher libcsv openssl curl

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCPACK_PACKAGE_VERSION=${{ steps.get_version.outputs.version }} -DPROJECT_VERSION=${{ steps.get_version.outputs.version }} -DCPACK_GENERATOR=${{ matrix.cpack_generator }}

      - name: Build
        run: cmake --build build --config Release

      - name: Package
        working-directory: build
        run: cpack -G ${{ matrix.cpack_generator }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: build/${{ matrix.package_glob }}

  build-arch:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:latest
    needs: build
    steps:
      - name: Get the version
        id: get_version
        run: echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

      - name: Download source tarball
        uses: actions/download-artifact@v3
        with:
          name: source-tarball

      - name: Install build tools and dependencies
        run: |
          pacman -Sy --noconfirm
          pacman -S --noconfirm git base-devel libsodium argon2 sqlcipher libcsv qt6-base openssl curl cmake

      - name: Create PKGBUILD
        run: |
          sha256=$(sha256sum securepasswd_mgmt-${{ steps.get_version.outputs.version }}.tar.gz | awk '{print $1}')
          cat <<EOF > PKGBUILD
          # Maintainer: fam007e <faisalmoshiur+secpasswdmgmt@gmail.com>
          pkgname=securepasswd_mgmt
          pkgver=${{ steps.get_version.outputs.version }}
          pkgrel=1
          pkgdesc="A secure, cross-platform password manager with TOTP support."
          arch=('x86_64')
          url="https://github.com/fam007e/SecurePasswd_MGMT"
          license=('MIT')
          depends=('libsodium' 'argon2' 'sqlcipher' 'qt6-base' 'libcsv' 'openssl' 'curl')
          makedepends=('cmake' 'gcc')
          source=("\$pkgname-\$pkgver.tar.gz")
          sha256sums=("$sha256")

          build() {
              cd "\$srcdir/\$pkgname-\$pkgver"
              mkdir build
              cd build
              cmake .. -DCMAKE_INSTALL_PREFIX=/usr
              make
          }

          package() {
              cd "\$srcdir/\$pkgname-\$pkgver/build"
              make DESTDIR="\$pkgdir/" install
          }
          EOF

      - name: Build Arch package
        run: makepkg -s --noconfirm
          
      - name: Upload Arch package
        uses: actions/upload-artifact@v3
        with:
          name: arch-package
          path: "*.pkg.tar.zst"

  release:
    needs: [build, build-arch]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload source tarball
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/source-tarball/securepasswd_mgmt-${{ steps.get_version.outputs.version }}.tar.gz
          asset_name: securepasswd_mgmt-${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Debian package
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/debian-package/*.deb
          asset_name: securepasswd-mgmt-${{ steps.get_version.outputs.version }}-amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload Arch package
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/arch-package/*.pkg.tar.zst
          asset_name: securepasswd-mgmt-${{ steps.get_version.outputs.version }}.pkg.tar.zst
          asset_content_type: application/zstd

      - name: Upload Windows installer
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows-installer/*.exe
          asset_name: securepasswd-mgmt-${{ steps.get_version.outputs.version }}-installer.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload macOS DMG
        uses: actions/upload-release-asset@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/macos-dmg/*.dmg
          asset_name: securepasswd-mgmt-${{ steps.get_version.outputs.version }}.dmg
          asset_content_type: application/x-apple-diskimage